<?xml version="1.0" encoding="utf-8"?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="ZoharBible.Horoscope"
             BackgroundColor="#1E3A5F">
    <ContentPage.Resources>
        <Style TargetType="Button">
            <Setter Property="CornerRadius" Value="20" />
            <Setter Property="Margin" Value="10" />
            <Setter Property="BackgroundColor" Value="LightBlue" />
            <Setter Property="BorderColor" Value="Yellow" />
            <Setter Property="TextColor" Value="DarkBlue" />
        </Style>
    </ContentPage.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
       <Button Grid.Row="0" Grid.Column="0" Text="Aries" Clicked="OnButtonClicked">
           <Button.Triggers>
               <Trigger TargetType="Button" Property="IsPressed" Value="True">
                   <Setter Property="BorderColor" Value="DarkGray" />
                   <Setter Property="BackgroundColor" Value="LightGray" />
                   <Setter Property="BorderWidth" Value="1" />
               </Trigger>
               <Trigger TargetType="Button" Property="IsEnabled" Value="False">
                   <Setter Property="BorderColor" Value="Gray" />
                   <Setter Property="BackgroundColor" Value="LightGray" />
                   <Setter Property="BorderWidth" Value="1" />
               </Trigger>
           </Button.Triggers>
           <Button.Style>
               <Style TargetType="Button">
                   <Setter Property="BorderColor" Value="Black" />
                   <Setter Property="BorderWidth" Value="1" />
                   <Setter Property="FontSize" Value="Small" />
                   <Setter Property="HeightRequest" Value="40" />
               </Style>
           </Button.Style>
       </Button>
       <Button Grid.Row="0" Grid.Column="1" Text="Taurus" Clicked="OnButtonClicked">
           <Button.Triggers>
               <Trigger TargetType="Button" Property="IsPressed" Value="True">
                   <Setter Property="BorderColor" Value="DarkGray" />
                   <Setter Property="BackgroundColor" Value="LightGray" />
                   <Setter Property="BorderWidth" Value="1" />
               </Trigger>
               <Trigger TargetType="Button" Property="IsEnabled" Value="False">
                   <Setter Property="BorderColor" Value="Gray" />
                   <Setter Property="BackgroundColor" Value="LightGray" />
                   <Setter Property="BorderWidth" Value="1" />
               </Trigger>
           </Button.Triggers>
           <Button.Style>
               <Style TargetType="Button">
                   <Setter Property="BorderColor" Value="Black" />
                   <Setter Property="BorderWidth" Value="1" />
                   <Setter Property="FontSize" Value="Small" />
                   <Setter Property="HeightRequest" Value="40" />
               </Style>
           </Button.Style>
       </Button>
       <Button Grid.Row="1" Grid.Column="0" Text="Gemini" Clicked="OnButtonClicked">
           <Button.Triggers>
               <Trigger TargetType="Button" Property="IsPressed" Value="True">
                   <Setter Property="BorderColor" Value="DarkGray" />
                   <Setter Property="BackgroundColor" Value="LightGray" />
                   <Setter Property="BorderWidth" Value="1" />
               </Trigger>
               <Trigger TargetType="Button" Property="IsEnabled" Value="False">
                   <Setter Property="BorderColor" Value="Gray" />
                   <Setter Property="BackgroundColor" Value="LightGray" />
                   <Setter Property="BorderWidth" Value="1" />
               </Trigger>
           </Button.Triggers>
           <Button.Style>
               <Style TargetType="Button">
                   <Setter Property="BorderColor" Value="Black" />
                   <Setter Property="BorderWidth" Value="1" />
                   <Setter Property="FontSize" Value="Small" />
                   <Setter Property="HeightRequest" Value="40" />
               </Style>
           </Button.Style>
       </Button>
       <Button Grid.Row="1" Grid.Column="1" Text="Cancer" Clicked="OnButtonClicked">
           <Button.Triggers>
               <Trigger TargetType="Button" Property="IsPressed" Value="True">
                   <Setter Property="BorderColor" Value="DarkGray" />
                   <Setter Property="BackgroundColor" Value="LightGray" />
                   <Setter Property="BorderWidth" Value="1" />
               </Trigger>
               <Trigger TargetType="Button" Property="IsEnabled" Value="False">
                   <Setter Property="BorderColor" Value="Gray" />
                   <Setter Property="BackgroundColor" Value="LightGray" />
                   <Setter Property="BorderWidth" Value="1" />
               </Trigger>
           </Button.Triggers>
           <Button.Style>
               <Style TargetType="Button">
                   <Setter Property="BorderColor" Value="Black" />
                   <Setter Property="BorderWidth" Value="1" />
                   <Setter Property="FontSize" Value="Small" />
                   <Setter Property="HeightRequest" Value="40" />
               </Style>
           </Button.Style>
       </Button>
       <Button Grid.Row="2" Grid.Column="0" Text="Leo" Clicked="OnButtonClicked">
           <Button.Triggers>
               <Trigger TargetType="Button" Property="IsPressed" Value="True">
                   <Setter Property="BorderColor" Value="DarkGray" />
                   <Setter Property="BackgroundColor" Value="LightGray" />
                   <Setter Property="BorderWidth" Value="1" />
               </Trigger>
               <Trigger TargetType="Button" Property="IsEnabled" Value="False">
                   <Setter Property="BorderColor" Value="Gray" />
                   <Setter Property="BackgroundColor" Value="LightGray" />
                   <Setter Property="BorderWidth" Value="1" />
               </Trigger>
           </Button.Triggers>
           <Button.Style>
               <Style TargetType="Button">
                   <Setter Property="BorderColor" Value="Black" />
                   <Setter Property="BorderWidth" Value="1" />
                   <Setter Property="FontSize" Value="Small" />
                   <Setter Property="HeightRequest" Value="40" />
               </Style>
           </Button.Style>
       </Button>
       <Button Grid.Row="2" Grid.Column="1" Text="Virgo" Clicked="OnButtonClicked">
           <Button.Triggers>
               <Trigger TargetType="Button" Property="IsPressed" Value="True">
                   <Setter Property="BorderColor" Value="DarkGray" />
                   <Setter Property="BackgroundColor" Value="LightGray" />
                   <Setter Property="BorderWidth" Value="1" />
               </Trigger>
               <Trigger TargetType="Button" Property="IsEnabled" Value="False">
                   <Setter Property="BorderColor" Value="Gray" />
                   <Setter Property="BackgroundColor" Value="LightGray" />
                   <Setter Property="BorderWidth" Value="1" />
               </Trigger>
           </Button.Triggers>
           <Button.Style>
               <Style TargetType="Button">
                   <Setter Property="BorderColor" Value="Black" />
                   <Setter Property="BorderWidth" Value="1" />
                   <Setter Property="FontSize" Value="Small" />
                   <Setter Property="HeightRequest" Value="40" />
               </Style>
           </Button.Style>
       </Button>
       <Button Grid.Row="3" Grid.Column="0" Text="Libra" Clicked="OnButtonClicked">
           <Button.Triggers>
               <Trigger TargetType="Button" Property="IsPressed" Value="True">
                   <Setter Property="BorderColor" Value="DarkGray" />
                   <Setter Property="BackgroundColor" Value="LightGray" />
                   <Setter Property="BorderWidth" Value="1" />
               </Trigger>
               <Trigger TargetType="Button" Property="IsEnabled" Value="False">
                   <Setter Property="BorderColor" Value="Gray" />
                   <Setter Property="BackgroundColor" Value="LightGray" />
                   <Setter Property="BorderWidth" Value="1" />
               </Trigger>
           </Button.Triggers>
           <Button.Style>
               <Style TargetType="Button">
                   <Setter Property="BorderColor" Value="Black" />
                   <Setter Property="BorderWidth" Value="1" />
                   <Setter Property="FontSize" Value="Small" />
                   <Setter Property="HeightRequest" Value="40" />
               </Style>
           </Button.Style>
       </Button>
       <Button Grid.Row="3" Grid.Column="1" Text="Scorpio" Clicked="OnButtonClicked">
           <Button.Triggers>
               <Trigger TargetType="Button" Property="IsPressed" Value="True">
                   <Setter Property="BorderColor" Value="DarkGray" />
                   <Setter Property="BackgroundColor" Value="LightGray" />
                   <Setter Property="BorderWidth" Value="1" />
               </Trigger>
               <Trigger TargetType="Button" Property="IsEnabled" Value="False">
                   <Setter Property="BorderColor" Value="Gray" />
                   <Setter Property="BackgroundColor" Value="LightGray" />
                   <Setter Property="BorderWidth" Value="1" />
               </Trigger>
           </Button.Triggers>
           <Button.Style>
               <Style TargetType="Button">
                   <Setter Property="BorderColor" Value="Black" />
                   <Setter Property="BorderWidth" Value="1" />
                   <Setter Property="FontSize" Value="Small" />
                   <Setter Property="HeightRequest" Value="40" />
               </Style>
           </Button.Style>
       </Button>
       <Button Grid.Row="4" Grid.Column="0" Text="Sagittarius" Clicked="OnButtonClicked">
           <Button.Triggers>
               <Trigger TargetType="Button" Property="IsPressed" Value="True">
                   <Setter Property="BorderColor" Value="DarkGray" />
                   <Setter Property="BackgroundColor" Value="LightGray" />
                   <Setter Property="BorderWidth" Value="1" />
               </Trigger>
               <Trigger TargetType="Button" Property="IsEnabled" Value="False">
                   <Setter Property="BorderColor" Value="Gray" />
                   <Setter Property="BackgroundColor" Value="LightGray" />
                   <Setter Property="BorderWidth" Value="1" />
               </Trigger>
           </Button.Triggers>
           <Button.Style>
               <Style TargetType="Button">
                   <Setter Property="BorderColor" Value="Black" />
                   <Setter Property="BorderWidth" Value="1" />
                   <Setter Property="FontSize" Value="Small" />
                   <Setter Property="HeightRequest" Value="40" />
               </Style>
           </Button.Style>
       </Button>
       <Button Grid.Row="4" Grid.Column="1" Text="Capricorn" Clicked="OnButtonClicked">
           <Button.Triggers>
               <Trigger TargetType="Button" Property="IsPressed" Value="True">
                   <Setter Property="BorderColor" Value="DarkGray" />
                   <Setter Property="BackgroundColor" Value="LightGray" />
                   <Setter Property="BorderWidth" Value="1" />
               </Trigger>
               <Trigger TargetType="Button" Property="IsEnabled" Value="False">
                   <Setter Property="BorderColor" Value="Gray" />
                   <Setter Property="BackgroundColor" Value="LightGray" />
                   <Setter Property="BorderWidth" Value="1" />
               </Trigger>
           </Button.Triggers>
           <Button.Style>
               <Style TargetType="Button">
                   <Setter Property="BorderColor" Value="Black" />
                   <Setter Property="BorderWidth" Value="1" />
                   <Setter Property="FontSize" Value="Small" />
                   <Setter Property="HeightRequest" Value="40" />
               </Style>
           </Button.Style>
       </Button>
       <Button Grid.Row="5" Grid.Column="0" Text="Aquarius" Clicked="OnButtonClicked">
           <Button.Triggers>
               <Trigger TargetType="Button" Property="IsPressed" Value="True">
                   <Setter Property="BorderColor" Value="DarkGray" />
                   <Setter Property="BackgroundColor" Value="LightGray" />
                   <Setter Property="BorderWidth" Value="1" />
               </Trigger>
               <Trigger TargetType="Button" Property="IsEnabled" Value="False">
                   <Setter Property="BorderColor" Value="Gray" />
                   <Setter Property="BackgroundColor" Value="LightGray" />
                   <Setter Property="BorderWidth" Value="1" />
               </Trigger>
           </Button.Triggers>
           <Button.Style>
               <Style TargetType="Button">
                   <Setter Property="BorderColor" Value="Black" />
                   <Setter Property="BorderWidth" Value="1" />
                   <Setter Property="FontSize" Value="Small" />
                   <Setter Property="HeightRequest" Value="40" />
               </Style>
           </Button.Style>
       </Button>
       <Button Grid.Row="5" Grid.Column="1" Text="Pisces" Clicked="OnButtonClicked">
           <Button.Triggers>
               <Trigger TargetType="Button" Property="IsPressed" Value="True">
                   <Setter Property="BorderColor" Value="DarkGray" />
                   <Setter Property="BackgroundColor" Value="LightGray" />
                   <Setter Property="BorderWidth" Value="1" />
               </Trigger>
               <Trigger TargetType="Button" Property="IsEnabled" Value="False">
                   <Setter Property="BorderColor" Value="Gray" />
                   <Setter Property="BackgroundColor" Value="LightGray" />
                   <Setter Property="BorderWidth" Value="1" />
               </Trigger>
           </Button.Triggers>
           <Button.Style>
               <Style TargetType="Button">
                   <Setter Property="BorderColor" Value="Black" />
                   <Setter Property="BorderWidth" Value="1" />
                   <Setter Property="FontSize" Value="Small" />
                   <Setter Property="HeightRequest" Value="40" />
               </Style>
           </Button.Style>
       </Button>
       
        <Grid Grid.Row="6" Grid.ColumnSpan="2" HorizontalOptions="Center">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <StackLayout Grid.Row="0" Grid.Column="0" Orientation="Horizontal" HorizontalOptions="Center" Margin="10">
                <Label Text="Day" VerticalOptions="Center" TextColor="White" WidthRequest="40" />
                <CheckBox x:Name="DayCheckBox" CheckedChanged="OnCheckBoxCheckedChanged" Color="Yellow" />
            </StackLayout>
            <StackLayout Grid.Row="0" Grid.Column="1" Orientation="Horizontal" HorizontalOptions="Center" Margin="10">
                <Label Text="Week" VerticalOptions="Center" TextColor="White" WidthRequest="40" />
                <CheckBox x:Name="WeekCheckBox" CheckedChanged="OnCheckBoxCheckedChanged" Color="Yellow" />
            </StackLayout>
            <StackLayout Grid.Row="1" Grid.Column="0" Orientation="Horizontal" HorizontalOptions="Center" Margin="10">
                <Label Text="Month" VerticalOptions="Center" TextColor="White" WidthRequest="40" />
                <CheckBox x:Name="MonthCheckBox" CheckedChanged="OnCheckBoxCheckedChanged" Color="Yellow" />
            </StackLayout>
            <StackLayout Grid.Row="1" Grid.Column="1" Orientation="Horizontal" HorizontalOptions="Center" Margin="10">
                <Label Text="Year" VerticalOptions="Center" TextColor="White" WidthRequest="40" />
                <CheckBox x:Name="YearCheckBox" CheckedChanged="OnCheckBoxCheckedChanged" Color="Yellow" />
            </StackLayout>
        </Grid>
      <Grid Grid.Column="0" Grid.Row="7" Grid.ColumnSpan="2" HorizontalOptions="Center">
          <Frame
              Grid.Row="0"
              BorderColor="Transparent"
              BackgroundColor="Transparent"
              Padding="3"
              HorizontalOptions="FillAndExpand"
              VerticalOptions="FillAndExpand">
              <Label
                  x:Name="MessageLabel"
                  BackgroundColor="Transparent"
                  Text="..."
                  TextColor="White"
                  Padding="10"
                  HorizontalOptions="FillAndExpand"
                  VerticalOptions="FillAndExpand" />
          </Frame>
      </Grid>
    </Grid>
</ContentPage>